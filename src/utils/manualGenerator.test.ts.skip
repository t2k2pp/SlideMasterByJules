import { generateSlidesFromMarkdown } from './manualGenerator.ts';
import { createLayer } from './layerFactory.ts';
import { Layer } from '../types/index.ts';

// Mock the layer factory to produce predictable IDs for snapshot testing
jest.mock('./layerFactory.ts', () => ({
  createLayer: jest.fn((type, template, content) => ({
    id: `mock-id-${type}-${content}`, // Make ID more predictable
    type,
    ...template,
    content,
  })),
}));

// Clear mock calls before each test
beforeEach(() => {
  (createLayer as jest.Mock).mockClear();
});

describe('generateSlidesFromMarkdown', () => {
  it('should parse markdown with a title slide and create slides correctly', () => {
    const markdown = `
# My Video Manual
This is the intro.

## Step 1: Do the first thing
Here is the explanation for step 1.

## Step 2: Do the second thing
And here is the explanation for step 2.
    `;
    const frames = ['frame1.jpg', 'frame2.jpg'];

    const slides = generateSlidesFromMarkdown(markdown, frames);

    // Should have 1 title slide + 2 content slides
    expect(slides).toHaveLength(3);

    // Check title slide
    expect(slides[0].title).toBe('My Video Manual');
    expect(slides[0].layers).toHaveLength(2); // Title and subtitle
    const titleLayer = slides[0].layers.find((l: Layer) => (l as any).content === 'My Video Manual');
    expect(titleLayer).toBeDefined();

    // Check first content slide
    expect(slides[1].title).toBe('Step 1: Do the first thing');
    expect(slides[1].layers).toHaveLength(3); // Title, content, image

    // Check that the image layer has the correct frame
    const imageLayer = slides[1].layers.find((l: Layer) => l.type === 'image') as Layer | undefined;
    expect((imageLayer as any)?.content).toBe('frame1.jpg');

    expect(createLayer).toHaveBeenCalledTimes(2 + 3); // 2 for title slide, 3 for content slide
  });

  it('should handle markdown with no title slide', () => {
    const markdown = `
## Step 1: Only one step
Explanation here.
    `;
    const frames = ['frame1.jpg'];

    const slides = generateSlidesFromMarkdown(markdown, frames);

    expect(slides).toHaveLength(1);
    expect(slides[0].title).toBe('Step 1: Only one step');
    expect(slides[0].layers).toHaveLength(3);
  });
});
